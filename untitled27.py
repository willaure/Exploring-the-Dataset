# -*- coding: utf-8 -*-
"""Untitled27.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QeZOPsgQ6F3HnO6KlBa17Hpc2kHTpv04
"""

# Exploring the Dataset¶

# Install the required library

# Install pandas (only needed if not already installed)
!pip install pandas

# Import pandas
import pandas as pd

# Check pandas version
print(pd.__version__)

# Load the dataset¶

# Read Data
# We utilize the pandas.read_csv() function for reading CSV files. However, in this version of the lab, which operates on JupyterLite, the dataset needs to be downloaded to the interface using the provided code below.
# The functions below will download the dataset into your browser:

import pandas as pd
import requests
from io import StringIO

# File URL
file_path = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/n01PQ9pSmiRX6520flujwQ/survey-data.csv"

def download_and_process_csv(url, output_filename="survey_results.csv"):
    """Download CSV from URL and save to local file"""
    try:
        # Download the file
        response = requests.get(url)
        response.raise_for_status()  # Raise error for bad status codes

        # Read directly into pandas
        df = pd.read_csv(StringIO(response.text))

        # Save to local CSV
        df.to_csv(output_filename, index=False)

        print(f"Successfully downloaded and saved as {output_filename}")
        print("\nFirst 5 rows:")
        return df.head()

    except Exception as e:
        print(f"Error: {e}")
        return None

# Execute the download and processing
download_and_process_csv(file_path)

import requests
import pandas as pd

# 1. Download the file
def download(url, filename):
    response = requests.get(url)
    if response.status_code == 200:
        with open(filename, "wb") as f:
            f.write(response.content)
        return True
    return False

file_path = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/n01PQ9pSmiRX6520flujwQ/survey-data.csv"
file_name = "survey_data.csv"

if download(file_path, file_name):
    print(f"Download successful: {file_name}")

    # 2. Load the CSV into a DataFrame
    df = pd.read_csv(file_name)  # <-- Your requested line

    # 3. Display the data
    print("\nFirst 5 rows:")
    print(df.head())

    print("\nSummary statistics:")
    print(df.describe())

else:
    print("Download failed")

# Hands on Lab

# Explore the dataset¶
# It is a good idea to print the top 5 rows of the dataset to get a feel of how the dataset will look.
# Display the top 5 rows and columns from your dataset.

import pandas as pd

# Load the dataset
df = pd.read_csv("survey_data.csv")

# Display the top 5 rows with all columns
print("First 5 rows of the dataset:")
display(df.head())  # Using display() for better formatting in Colab

# Additional exploration
print("\nDataset Info:")
print(f"Number of rows: {len(df)}")
print(f"Number of columns: {len(df.columns)}")
print("\nColumn names:")
print(df.columns.tolist())

# Find out the number of rows and columns
# Start by exploring the numbers of rows and columns of data in the dataset.
# Print the number of rows in the dataset.

import pandas as pd

# Load the dataset
df = pd.read_csv("survey_data.csv")

# Get the dimensions
num_rows = len(df)
num_columns = len(df.columns)

# Print the results
print(f"Number of rows: {num_rows}")

# Print the number of columns in the dataset.

import pandas as pd

# Load the dataset
df = pd.read_csv("survey_data.csv")

# Print number of columns
print("Number of columns:", len(df.columns))

# Identify the data types of each column

import pandas as pd

# Load the dataset
df = pd.read_csv("survey_data.csv")

# Print data types of all columns
print("Data types of each column:")
print(df.dtypes)

# Print the datatype of all columns.

import pandas as pd

# Load the dataset
df = pd.read_csv("survey_data.csv")

# Print data types of all columns
print("Data types of each column:")
print(df.dtypes)

# Print the mean age of the survey participants.

import pandas as pd

# Load the dataset
df = pd.read_csv("survey_data.csv")

# Define a function to convert age ranges to midpoint values
def age_to_midpoint(age_str):
    if pd.isna(age_str):
        return None
    if 'Under' in age_str:
        return 16  # Approximate for "Under 18"
    elif 'Prefer' in age_str or 'say' in age_str:
        return None
    elif 'or older' in age_str:
        return 70  # Approximate for "65 or older"
    else:
        numbers = [int(s) for s in age_str.split() if s.isdigit()]
        return sum(numbers) / len(numbers) if numbers else None

# Create a new numerical age column
df['Age_midpoint'] = df['Age'].apply(age_to_midpoint)

# Calculate and print mean age
mean_age = df['Age_midpoint'].mean()
print(f"Mean age of participants: {mean_age:.1f} years")

# The dataset is the result of a world wide survey. Print how many unique countries are there in the Country column.

import pandas as pd

# Load your dataset (example)
# df = pd.read_csv('your_dataset.csv')

# Count unique countries
unique_countries = df['Country'].nunique()
print("Number of unique countries:", unique_countries)